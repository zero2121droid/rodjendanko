"""
Django settings for rodjendanko_backend project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hqqy&wm&-tykhxr*9e2ydx6#xuq@dnp9896f5!z-j@&n(r$4sh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'rodjendanko.lenitech.org',
    'localhost',
    '127.0.0.1',
    '192.168.2.20',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    "django_filters",
    'rest_framework',
    'services',
    'reservations',
    'rest_framework.authtoken',
    'drf_yasg',
    'corsheaders',
    'wallet',
    'notifications',
    'playrooms',
    'dj_rest_auth',
    'dj_rest_auth.registration',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'users.apps.UsersConfig',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'rodjendanko_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'static/templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rodjendanko_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'rodjendanko_db',
        'USER': 'postgres',      # zameni svojim korisničkim imenom
        'PASSWORD': 'njeXe3f0JiosaHpYvkMtAv2M',   # zameni svojom lozinkom
        'HOST': 'db_rodjendanko',
        #'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'users.User'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SITE_ID = 1

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

REST_USE_JWT = True


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

# Možda je bolje koristiti lokalnu timezone umesto UTC
# TIME_ZONE = 'UTC'  # Staro
TIME_ZONE = 'Europe/Belgrade'  # Dodato za bolje lokalno vreme

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = 'core'
LOGIN_URL = 'login'
LOGOUT_REDIRECT_URL = ''

# REST FRAMEWORK default authentication and permission classes
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        #'rest_framework.authentication.TokenAuthentication',
        #'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    #'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'DEFAULT_PAGINATION_CLASS': 'api.pagination.CustomPageNumberPagination',
    'PAGE_SIZE': 10,
    # Dodano za bolje rukovanje datumom/vremenom
    'DATETIME_FORMAT': '%Y-%m-%dT%H:%M:%S%z',
    'DATETIME_INPUT_FORMATS': [
        '%Y-%m-%dT%H:%M:%S%z',  # Sa timezone
        '%Y-%m-%dT%H:%M:%S.%f%z',  # Sa mikrosekundama i timezone
        '%Y-%m-%dT%H:%M:%SZ',  # UTC format
        '%Y-%m-%dT%H:%M:%S',  # Bez timezone (kao fallback)
    ]
}

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8082",
    "https://rodjendanko.lenitech.org",
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",           
    "http://127.0.0.1:3000",
    "https://itmtools.itm-rz.de",  
    "http://192.168.2.20:5173",
    "https://192.168.2.20",
    "http://localhost:5173",
]

#CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

#ENCRYPTION_KEY = os.getenv("ENCRYPTION_KEY", "b'8PusTxeVS2PXyyS3DNQosWUeP-75Gfvbpdq1cOS0Hjw='")
ENCRYPTION_KEY = "8PusTxeVS2PXyyS3DNQosWUeP-75Gfvbpdq1cOS0Hjw="

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),  # Token expires in 60 minutes
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),  # Refresh token lasts for 1 day
    "ROTATE_REFRESH_TOKENS": True,  # Issue a new refresh token each time
    "BLACKLIST_AFTER_ROTATION": True,  # Blacklist old refresh tokens
    "AUTH_HEADER_TYPES": ("Bearer",),
}

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

SOCIAL_AUTH_GOOGLE_CLIENT_ID = '60174222574-s0u7hh7mq604vc49mbk9n6v65gjjialh.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_SECRET = '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'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
}

SWAGGER_SETTINGS = {
    'LOGIN_URL': None,
    'LOGOUT_URL': None,
    'USE_SESSION_AUTH': False,
}

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')